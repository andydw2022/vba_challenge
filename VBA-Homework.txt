Sub StockSummary()

'Declare Variables used in worksheet

Dim ws As Worksheet
Dim TotalTickerCount As Long
Dim rowcount As Long
Dim StockVolume As Long
Dim n As Integer
Dim i As Long
Dim OpeningPrice As Double
Dim ClosingPrice As Double
Dim YrPriceChange As Double
Dim YrPercentChange As Double
Dim Location As String
Dim HighPercentInc As Double
Dim LowPercentInc As Double
Dim HighStockVol As Double
Dim TickerHighPercentInc As String
Dim TickerLowPercentInc As String
Dim TickerHighStockVol As String

'Loop through all worksheets

For Each ws In Worksheets

'Sort Data by Ticker, then by Date
'Columns.Sort Key1:=Columns("A"), Order1:=xlAscending, key2:=Columns("B"), Order2:=xlAscending, Header:=xlYes
'Coding assumption that sheets are sorted by Ticker and Date asc. 

'Create The Header Rows for the Excel Data Tables - Additional Columns and Challenge Table

    'Headere rows as per assignment
    ws.Range("I1").Value = "Ticker"
    ws.Range("M1").Value = "Yearly Change"
    ws.Range("N1").Value = "Percent Change"
    ws.Range("O1").Value = "Total Stock Volume"

    'Additional Columns used to check calculations, removed prior to submitting assignment
     ws.Range("H1").Value = "TotalTickerCount"
     ws.Range("J1").Value = "RowCount"
     ws.Range("K1").Value = "Opening Price"
     ws.Range("L1").Value = "Closing Price"
    
    'Challenge Table
    ws.Range("Q2").Value = "Greatest % Increase"
    ws.Range("Q3").Value = "Greatest % Decrease"
    ws.Range("Q4").Value = "Greatest Total Volume"
    ws.Range("R1").Value = "Ticker"
    ws.Range("S1").Value = "Value"

    'Get the total number of rows for each worksheet in the first column (ticker): A
    TotalTickerCount = ws.Cells(Rows.Count, "A").End(xlUp).Row - 1  'Don't count the heading
    ws.Range("H2") = TotalTickerCount
    'Assuming all worksheets are sorted by Ticker and Date, 'Get a row count and start looping to extract the required infomation
    
    n = 2                                                         'New Row for each Ticker Type
    rowcount = 0                                                  'Counter for rows of a ticker type
    SumStockVolume = 0                                            'Sum of Stock Volume for a ticker type
    ws.Cells(2, 9).Value = ws.Cells(2, 1).Value                   'Save the first ticker type of a sheet
    HighPercentInc = 0
    LowPercentInc = 0
    HighStockVol = 0
    '  MsgBox "opening price ticker " + ws.Cells(2, 1).Value + Str(ws.Cells(2, 3).Value) 'Debug
    OpeningPrice = ws.Cells(2, 3).Value                           'Column  C (3) Opening price at start of year for a ticker type
    ws.Cells(2, 11).Value = OpeningPrice
    '
    'Loop through all stock in each worksheet
    '
    For i = 2 To TotalTickerCount
      ' OpeningPrice = ws.Cells(i, 3).Value
      StockVolume = ws.Cells(i, 7).Value                          'Column G (7) Stock Volume
      SumStockVolume = SumStockVolume + ws.Cells(i, 7).Value
      rowcount = rowcount + 1
      If ws.Cells(i, 1) <> ws.Cells(i + 1, 1) Then                'Change in Ticker Type
          ws.Cells(n, 10) = rowcount                              'Number of rows for a previous ticker
          ClosingPrice = ws.Cells(i, 6).Value                     'Column F (6) Closing price at end of year of previous ticker
          ws.Cells(n, 12).Value = ClosingPrice
          ws.Cells(n, 15).Value = SumStockVolume                  'Sum of Stock Volume for previous ticker
          YrPriceChange = ws.Cells(n, 12).Value - ws.Cells(n, 11).Value
          ws.Cells(n, 13).Value = YrPriceChange
          If OpeningPrice <> 0 Then ' ws.Cells(n, 13).Value <> 0 Then                      'There is a price change for the year
            YrPercentChange = Round(YrPriceChange / OpeningPrice * 100, 2)
            ws.Cells(n, 14).Value = YrPercentChange
          Else
           ws.Cells(n, 14).Value = 0                              'No change in yearly price. To avoid division by 0
          End If
          If YrPercentChange > 0 Then
            ws.Cells(n, 14).Interior.ColorIndex = 4
          ElseIf YrPercentChange < 0 Then
            ws.Cells(n, 14).Interior.ColorIndex = 3
          End If
          ws.Cells(n + 1, 9).Value = ws.Cells(i + 1, 1).Value     'Save the new ticker type
          OpeningPrice = ws.Cells(i + 1, 3).Value                 'Opening value start of year for a new ticker type
          ws.Cells(n + 1, 11).Value = OpeningPrice                'Opening value start of year for a new ticker type
          n = n + 1                                               'New row to store new ticker type
          rowcount = 0
          If SumStockVolume > HighStockVol Then
            HighStockVol = SumStockVolume
            TickerHighStockVol = ws.Cells(i, 1).Value
          End If 'Reset counter for new ticker type
          SumStockVolume = 0                                      'Reset Stock Volume count for new ticker type
      End If
      '
      ' This block of IF statements keeps a track of the highest and lowest percentage increase and highest stock volume traded for a worksheet
      '
      If YrPercentChange > HighPercentInc Then
        HighPercentInc = YrPercentChange
        TickerHighPercentInc = ws.Cells(i, 1).Value
      End If
      If YrPercentChange < LowPercentInc Then
         LowPercentInc = YrPercentChange
         TickerLowPercentInc = ws.Cells(i, 1).Value
      End If
      If SumStockVolume > HighStockVol Then
         HighStockVol = SumStockVolume
         TickerHighStockVol = ws.Cells(i, 1).Value
      End If
    Next i
    '
    'Ensure last row (TotalTickerCount + 1) of data for a worksheet is not missed
    '
    ws.Cells(n, 10) = rowcount + 1                                  'Save Number of rows for the previous ticker
    SumStockVolume = SumStockVolume + ws.Cells(TotalTickerCount + 1, 7).Value
    ws.Cells(n, 12).Value = ws.Cells(TotalTickerCount + 1, 6).Value
    ws.Cells(n, 13).Value = ws.Cells(n, 12).Value - ws.Cells(n, 11).Value
    ws.Cells(n, 15).Value = SumStockVolume                          'ws.Cells(TotalTickerCount + 1, 7).Value
    If ws.Cells(n, 13).Value <> 0 Then                              'There is a price change
        YrPercentChange = ws.Cells(n, 13).Value / ws.Cells(n, 11).Value * 100
        ws.Cells(n, 14).Value = Round(YrPercentChange, 2)
    Else
        ws.Cells(n, 14).Value = 0                                   'No change in yearly price. To avoid division by 0
    End If
    If YrPercentChange > 0 Then
        ws.Cells(n, 14).Interior.ColorIndex = 4
    ElseIf YrPercentChange < 0 Then
        ws.Cells(n, 14).Interior.ColorIndex = 3
    End If
    If YrPercentChange > HighPercentInc Then
        HighPercentInc = YrPercentChange
        TickerHighPercentInc = ws.Cells(TotalTickerCount + 1, 1).Value
    End If
    If YrPercentChange < LowPercentInc Then
        LowPercentInc = YrPercentChange
        TickerLowPercentInc = ws.Cells(TotalTickerCount + 1, 1).Value
    End If
    If SumStockVolume > HighStockVol Then
        HighStockVol = SumStockVolume
        TickerHighStockVol = ws.Cells(TotalTickerCount + 1, 1).Value
    End If
    n = 2

    ws.Range("R2").Value = TickerHighPercentInc
    ws.Range("R3").Value = TickerLowPercentInc
    ws.Range("R4").Value = TickerHighStockVol
    ws.Range("S2").Value = HighPercentInc
    ws.Range("S3").Value = LowPercentInc
    ws.Range("S4").Value = HighStockVol
    
Next ws
End Sub
